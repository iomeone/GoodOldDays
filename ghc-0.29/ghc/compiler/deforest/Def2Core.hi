{-# GHC_PRAGMA INTERFACE VERSION 3 #-}
interface Def2Core where
import CoreSyn(CoreBinding, CoreExpr)
import DefSyn(DefBindee, DefBinding(..))
import Id(Id)
import PlainCore(PlainCoreProgram(..))
import SplitUniq(SUniqSM(..), SplitUniqSupply)
data CoreBinding a b 
data DefBindee 
type DefBinding = CoreBinding Id DefBindee
data Id 
type PlainCoreProgram = [CoreBinding Id Id]
type SUniqSM a = SplitUniqSupply -> a
d2c :: CoreExpr Id DefBindee -> SplitUniqSupply -> CoreExpr Id Id
def2core :: [CoreBinding Id DefBindee] -> SplitUniqSupply -> [CoreBinding Id Id]
defPanic :: [Char] -> [Char] -> CoreExpr Id DefBindee -> SplitUniqSupply -> a

