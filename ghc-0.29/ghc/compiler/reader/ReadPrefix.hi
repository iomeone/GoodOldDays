{-# GHC_PRAGMA INTERFACE VERSION 3 #-}
interface ReadPrefix where
import AbsSyn(Module)
import HsDecls(ConDecl)
import HsPat(InPat)
import HsTypes(MonoType)
import LiftMonad(LiftM)
import ProtoName(ProtoName)
rdConDecl :: [Char] -> [Char] -> LiftM (ConDecl ProtoName, [Char])
	{-# GHC_PRAGMA _A_ 2 _U_ 21 _S_ "LS" _N_ _N_ #-}
rdId :: [Char] -> LiftM (ProtoName, [Char])
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _S_ "S" _N_ _N_ #-}
rdIdString :: [Char] -> LiftM ([Char], [Char])
	{-# GHC_PRAGMA _A_ 1 _U_ 2 _S_ "S" _N_ _N_ #-}
rdList :: ([Char] -> LiftM (a, [Char])) -> [Char] -> LiftM ([a], [Char])
	{-# GHC_PRAGMA _A_ 2 _U_ 22 _S_ "LS" _N_ _N_ #-}
rdModule :: [Char] -> ([Char], [Char] -> Bool, Module ProtoName (InPat ProtoName))
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _S_ "S" _N_ _N_ #-}
rdMonoType :: [Char] -> LiftM (MonoType ProtoName, [Char])
	{-# GHC_PRAGMA _A_ 1 _U_ 2 _S_ "S" _N_ _N_ #-}
rdString :: [Char] -> LiftM ([Char], [Char])
	{-# GHC_PRAGMA _A_ 1 _U_ 2 _S_ "S" _N_ _N_ #-}

