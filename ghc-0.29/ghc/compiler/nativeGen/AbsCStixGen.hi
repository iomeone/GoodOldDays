{-# GHC_PRAGMA INTERFACE VERSION 6 #-}
interface AbsCStixGen where
import AbsCSyn(AbstractC, CAddrMode, CStmtMacro, MagicId, RegRelative, ReturnInfo)
import BasicLit(BasicLit)
import CLabelInfo(CLabel)
import CharSeq(CSeq)
import ClosureInfo(ClosureInfo)
import CostCentre(CostCentre)
import HeapOffs(HeapOffset)
import MachDesc(RegLoc, Target)
import Maybes(Labda)
import PreludePS(_PackedString)
import PreludeRatio(Ratio(..))
import PrimKind(PrimKind)
import PrimOps(PrimOp)
import SMRep(SMRep)
import SplitUniq(SUniqSM(..), SplitUniqSupply)
import Stix(CodeSegment, StixReg, StixTree)
data AbstractC 
data Target 
type SUniqSM a = SplitUniqSupply -> a
data SplitUniqSupply 
data StixTree 
genCodeAbstractC :: Target -> AbstractC -> SplitUniqSupply -> [[StixTree]]

