{-# GHC_PRAGMA INTERFACE VERSION 6 #-}
interface SaAbsInt where
import CoreSyn(CoreExpr)
import Id(Id)
import IdInfo(Demand)
import SaLib(AbsVal, AbsValEnv, AnalysisKind)
import UniType(UniType)
absEval :: AnalysisKind -> CoreExpr Id Id -> AbsValEnv -> AbsVal
	{-# GHC_PRAGMA _A_ 3 _U_ 222 _N_ _S_ "LSL" _N_ _N_ #-}
findDemand :: AbsValEnv -> AbsValEnv -> CoreExpr Id Id -> Id -> Demand
	{-# GHC_PRAGMA _A_ 4 _U_ 2222 _N_ _S_ "LLLU(LSLL)" _N_ _N_ #-}
findStrictness :: (Bool, Bool) -> [UniType] -> AbsVal -> AbsVal -> [Demand]
	{-# GHC_PRAGMA _A_ 4 _U_ 2122 _N_ _S_ "LSLL" _N_ _N_ #-}
fixpoint :: AnalysisKind -> [Id] -> [CoreExpr Id Id] -> AbsValEnv -> [AbsVal]
	{-# GHC_PRAGMA _A_ 4 _U_ 2222 _N_ _S_ "LSLL" _N_ _N_ #-}
isBot :: AbsVal -> Bool
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "S" _N_ _N_ #-}
widen :: AnalysisKind -> AbsVal -> AbsVal
	{-# GHC_PRAGMA _A_ 2 _U_ 22 _N_ _S_ "ES" _N_ _N_ #-}

