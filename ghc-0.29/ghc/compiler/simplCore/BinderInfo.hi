{-# GHC_PRAGMA INTERFACE VERSION 6 #-}
interface BinderInfo where
import Outputable(Outputable)
data BinderInfo   = DeadCode | ManyOcc Int | OneOcc FunOrArg DuplicationDanger InsideSCC Int Int
data DuplicationDanger 	{-# GHC_PRAGMA DupDanger | NoDupDanger #-}
data FunOrArg 	{-# GHC_PRAGMA FunOcc | ArgOcc #-}
data InsideSCC 	{-# GHC_PRAGMA InsideSCC | NotInsideSCC #-}
argOccurrence :: Int -> BinderInfo
	{-# GHC_PRAGMA _A_ 1 _U_ 2 _N_ _N_ _N_ _N_ #-}
combineAltsBinderInfo :: BinderInfo -> BinderInfo -> BinderInfo
	{-# GHC_PRAGMA _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_ #-}
combineBinderInfo :: BinderInfo -> BinderInfo -> BinderInfo
	{-# GHC_PRAGMA _A_ 2 _U_ 22 _N_ _S_ "SS" _N_ _N_ #-}
funOccurrence :: Int -> BinderInfo
	{-# GHC_PRAGMA _A_ 1 _U_ 2 _N_ _N_ _N_ _N_ #-}
getBinderInfoArity :: BinderInfo -> Int
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "S" _F_ _IF_ARGS_ 0 1 C 7 \ (u0 :: BinderInfo) -> case u0 of { _ALG_ _ORIG_ BinderInfo DeadCode  -> _!_ I# [] [0#]; _ORIG_ BinderInfo ManyOcc (u1 :: Int) -> u1; _ORIG_ BinderInfo OneOcc (u2 :: FunOrArg) (u3 :: DuplicationDanger) (u4 :: InsideSCC) (u5 :: Int) (u6 :: Int) -> u6; _NO_DEFLT_ } _N_ #-}
inlineUnconditionally :: Bool -> BinderInfo -> Bool
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "LS" _N_ _N_ #-}
isDupDanger :: DuplicationDanger -> Bool
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "E" _F_ _IF_ARGS_ 0 1 C 4 \ (u0 :: DuplicationDanger) -> case u0 of { _ALG_ _ORIG_ BinderInfo NoDupDanger  -> _!_ False [] []; _ORIG_ BinderInfo DupDanger  -> _!_ True [] []; _NO_DEFLT_ } _N_ #-}
isFun :: FunOrArg -> Bool
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "E" _F_ _IF_ARGS_ 0 1 C 4 \ (u0 :: FunOrArg) -> case u0 of { _ALG_ _ORIG_ BinderInfo ArgOcc  -> _!_ False [] []; _ORIG_ BinderInfo FunOcc  -> _!_ True [] []; _NO_DEFLT_ } _N_ #-}
markDangerousToDup :: BinderInfo -> BinderInfo
	{-# GHC_PRAGMA _A_ 1 _U_ 2 _N_ _S_ "S" _N_ _N_ #-}
markInsideSCC :: BinderInfo -> BinderInfo
	{-# GHC_PRAGMA _A_ 1 _U_ 2 _N_ _S_ "S" _N_ _N_ #-}
markMany :: BinderInfo -> BinderInfo
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "S" _N_ _N_ #-}
oneSafeOcc :: Bool -> BinderInfo -> Bool
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "LS" _N_ _N_ #-}
oneTextualOcc :: Bool -> BinderInfo -> Bool
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "LS" _N_ _N_ #-}
setBinderInfoArityToZero :: BinderInfo -> BinderInfo
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "S" _N_ _N_ #-}
instance Outputable BinderInfo
	{-# GHC_PRAGMA _M_ BinderInfo {-dfun-} _A_ 2 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 1 _CONSTM_ Outputable ppr (BinderInfo) _N_
	 ppr = { _A_ 2 _U_ 0122 _N_ _S_ "AS" {_A_ 1 _U_ 122 _N_ _N_ _N_ _N_} _N_ _N_ } #-}

