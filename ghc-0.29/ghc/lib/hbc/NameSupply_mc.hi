{-# GHC_PRAGMA INTERFACE VERSION 6 #-}
interface NameSupply where
type Name = Int
data NameSupply 	{-# GHC_PRAGMA NameSupply Int NameSupply NameSupply #-}
getName :: NameSupply -> Int
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(U(P)AA)" {_A_ 1 _U_ 2 _N_ _N_ _F_ _IF_ARGS_ 0 1 X 2 \ (u0 :: Int#) -> _!_ I# [] [u0] _N_} _F_ _IF_ARGS_ 0 1 C 2 \ (u0 :: NameSupply) -> case u0 of { _ALG_ _ORIG_ NameSupply NameSupply (u1 :: Int) (u2 :: NameSupply) (u3 :: NameSupply) -> u1; _NO_DEFLT_ } _N_ #-}
initialNameSupply :: NameSupply
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
listNameSupply :: NameSupply -> [NameSupply]
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(ALL)" {_A_ 2 _U_ 21 _N_ _N_ _N_ _N_} _N_ _N_ #-}
splitNameSupply :: NameSupply -> (NameSupply, NameSupply)
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(ALL)" {_A_ 2 _U_ 22 _N_ _N_ _F_ _IF_ARGS_ 0 2 XX 3 \ (u0 :: NameSupply) (u1 :: NameSupply) -> _!_ _TUP_2 [NameSupply, NameSupply] [u0, u1] _N_} _F_ _IF_ARGS_ 0 1 C 4 \ (u0 :: NameSupply) -> case u0 of { _ALG_ _ORIG_ NameSupply NameSupply (u1 :: Int) (u2 :: NameSupply) (u3 :: NameSupply) -> _!_ _TUP_2 [NameSupply, NameSupply] [u2, u3]; _NO_DEFLT_ } _N_ #-}

