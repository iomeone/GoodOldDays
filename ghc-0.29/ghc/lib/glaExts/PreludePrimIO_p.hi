{-# GHC_PRAGMA INTERFACE VERSION 6 #-}
interface PreludePrimIO where
import PreludeArray(_ByteArray)
import PreludeBuiltin(Char(..), Int(..), List(..), Tuple0, Tuple2, _RealWorld(..), _State(..))
import PreludeGlaST(fixST, unsafeInterleaveST)
import PreludeIOError(IOError13)
import PreludeMonadicIO(Either)
import Stdio(_FILE(..), fclose, fdopen, fflush, fopen, fread, freopen, fwrite)
infixr 1 `seqPrimIO`
infixr 1 `thenPrimIO`
type IVar a = _IVar a
type MVar a = _MVar a
data _FILE   = _FILE Addr#
data _IVar a 	{-# GHC_PRAGMA _IVar (SynchVar# _RealWorld a) #-}
data _MVar a 	{-# GHC_PRAGMA _MVar (SynchVar# _RealWorld a) #-}
appendChanPrimIO :: [Char] -> [Char] -> _State _RealWorld -> ((), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 3 _U_ 222 _N_ _N_ _N_ _N_ #-}
appendFilePrimIO :: [Char] -> [Char] -> _State _RealWorld -> ((), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 3 _U_ 222 _N_ _N_ _N_ _N_ #-}
fixPrimIO :: (a -> _State _RealWorld -> (a, _State _RealWorld)) -> _State _RealWorld -> (a, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 22 _N_ _N_ _F_ _IF_ARGS_ 1 0 X 1 _/\_ u0 -> _TYAPP_  _TYAPP_  _ORIG_ PreludeGlaST fixST { _RealWorld } { u0 } _N_ #-}
fixST :: (b -> _State a -> (b, _State a)) -> _State a -> (b, _State a)
	{-# GHC_PRAGMA _A_ 2 _U_ 22 _N_ _S_ "SL" _N_ _N_ #-}
getArgsPrimIO :: _State _RealWorld -> ([[Char]], _State _RealWorld)
	{-# GHC_PRAGMA _A_ 1 _U_ 2 _N_ _N_ _N_ _N_ #-}
listPrimIO :: [_State _RealWorld -> (a, _State _RealWorld)] -> _State _RealWorld -> ([a], _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 12 _N_ _S_ "SL" _N_ _N_ #-}
mapAndUnzipPrimIO :: (a -> _State _RealWorld -> ((b, c), _State _RealWorld)) -> [a] -> _State _RealWorld -> (([b], [c]), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 3 _U_ 212 _N_ _S_ "LSL" _N_ _N_ #-}
mapPrimIO :: (a -> _State _RealWorld -> (b, _State _RealWorld)) -> [a] -> _State _RealWorld -> ([b], _State _RealWorld)
	{-# GHC_PRAGMA _A_ 3 _U_ 212 _N_ _S_ "LSL" _N_ _N_ #-}
newEmptyMVar :: _State _RealWorld -> (Either IOError13 (_MVar a), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(P)" {_A_ 1 _U_ 2 _N_ _N_ _N_ _N_} _N_ _N_ #-}
newIVar :: _State _RealWorld -> (Either IOError13 (_IVar a), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(P)" {_A_ 1 _U_ 2 _N_ _N_ _N_ _N_} _N_ _N_ #-}
newMVar :: a -> _State _RealWorld -> (Either IOError13 (_MVar a), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 21 _N_ _S_ "LU(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
putMVar :: _MVar a -> a -> _State _RealWorld -> (Either IOError13 (), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 3 _U_ 121 _N_ _S_ "U(P)LU(P)" {_A_ 3 _U_ 222 _N_ _N_ _N_ _N_} _N_ _N_ #-}
readChanPrimIO :: [Char] -> _State _RealWorld -> ([Char], _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 22 _N_ _N_ _N_ _N_ #-}
readIVar :: _IVar a -> _State _RealWorld -> (Either IOError13 a, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(P)U(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
readMVar :: _MVar a -> _State _RealWorld -> (Either IOError13 a, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(P)U(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
returnPrimIO :: a -> _State _RealWorld -> (a, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 22 _N_ _S_ "LS" _F_ _ALWAYS_ _/\_ u0 -> \ (u1 :: u0) (u2 :: _State _RealWorld) -> case u2 of { _ALG_ S# (u3 :: State# _RealWorld) -> _!_ _TUP_2 [u0, (_State _RealWorld)] [u1, u2]; _NO_DEFLT_ } _N_ #-}
seqPrimIO :: (_State _RealWorld -> (a, _State _RealWorld)) -> (_State _RealWorld -> (b, _State _RealWorld)) -> _State _RealWorld -> (b, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 3 _U_ 112 _N_ _S_ "SSL" _F_ _ALWAYS_ _/\_ u0 u1 -> \ (u2 :: _State _RealWorld -> (u0, _State _RealWorld)) (u3 :: _State _RealWorld -> (u1, _State _RealWorld)) (u4 :: _State _RealWorld) -> case _APP_  u2 [ u4 ] of { _ALG_ _TUP_2 (u5 :: u0) (u6 :: _State _RealWorld) -> _APP_  u3 [ u6 ]; _NO_DEFLT_ } _N_ #-}
swapMVar :: _MVar a -> a -> _State _RealWorld -> (Either IOError13 a, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 3 _U_ 121 _N_ _S_ "U(P)LU(P)" {_A_ 3 _U_ 222 _N_ _N_ _N_ _N_} _N_ _N_ #-}
takeMVar :: _MVar a -> _State _RealWorld -> (Either IOError13 a, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(P)U(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
thenPrimIO :: (_State _RealWorld -> (a, _State _RealWorld)) -> (a -> _State _RealWorld -> (b, _State _RealWorld)) -> _State _RealWorld -> (b, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 3 _U_ 112 _N_ _S_ "SSL" _F_ _ALWAYS_ _/\_ u0 u1 -> \ (u2 :: _State _RealWorld -> (u0, _State _RealWorld)) (u3 :: u0 -> _State _RealWorld -> (u1, _State _RealWorld)) (u4 :: _State _RealWorld) -> case _APP_  u2 [ u4 ] of { _ALG_ _TUP_2 (u5 :: u0) (u6 :: _State _RealWorld) -> _APP_  u3 [ u5, u6 ]; _NO_DEFLT_ } _N_ #-}
threadDelay :: Int -> _State _RealWorld -> (Either IOError13 (), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(P)U(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
threadWaitRead :: Int -> _State _RealWorld -> (Either IOError13 (), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(P)U(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
threadWaitWrite :: Int -> _State _RealWorld -> (Either IOError13 (), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(P)U(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
unsafeInterleavePrimIO :: (_State _RealWorld -> (a, _State _RealWorld)) -> _State _RealWorld -> (a, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 12 _N_ _N_ _F_ _IF_ARGS_ 1 2 XX 3 _/\_ u0 -> \ (u1 :: _State _RealWorld -> (u0, _State _RealWorld)) (u2 :: _State _RealWorld) -> _APP_  _TYAPP_  _TYAPP_  _ORIG_ PreludeGlaST unsafeInterleaveST { _RealWorld } { u0 } [ u1, u2 ] _N_ #-}
unsafeInterleaveST :: (_State a -> (b, _State a)) -> _State a -> (b, _State a)
	{-# GHC_PRAGMA _A_ 2 _U_ 12 _N_ _N_ _N_ _N_ #-}
fclose :: _FILE -> _State _RealWorld -> (Int, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(P)U(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
fdopen :: Int -> [Char] -> _State _RealWorld -> (_FILE, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 3 _U_ 121 _N_ _S_ "U(P)LU(P)" {_A_ 3 _U_ 222 _N_ _N_ _N_ _N_} _N_ _N_ #-}
fflush :: _FILE -> _State _RealWorld -> (Int, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(P)U(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
fopen :: [Char] -> [Char] -> _State _RealWorld -> (_FILE, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 3 _U_ 221 _N_ _S_ "LLU(P)" {_A_ 3 _U_ 222 _N_ _N_ _N_ _N_} _N_ _N_ #-}
fread :: Int -> Int -> _FILE -> _State _RealWorld -> ((Int, _ByteArray Int), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 4 _U_ 1111 _N_ _S_ "U(P)U(P)U(P)U(P)" {_A_ 4 _U_ 2222 _N_ _N_ _N_ _N_} _N_ _N_ #-}
freopen :: [Char] -> [Char] -> _FILE -> _State _RealWorld -> (_FILE, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 4 _U_ 2211 _N_ _S_ "LLU(P)U(P)" {_A_ 4 _U_ 2222 _N_ _N_ _N_ _N_} _N_ _N_ #-}
fwrite :: _ByteArray Int -> Int -> Int -> _FILE -> _State _RealWorld -> (Int, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 5 _U_ 11111 _N_ _S_ "U(AP)U(P)U(P)U(P)U(P)" {_A_ 5 _U_ 22222 _N_ _N_ _N_ _N_} _N_ _N_ #-}
unsafePerformPrimIO :: (_State _RealWorld -> (a, _State _RealWorld)) -> a
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "S" _N_ _N_ #-}
writeIVar :: _IVar a -> a -> _State _RealWorld -> (Either IOError13 (), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 3 _U_ 121 _N_ _S_ "U(P)LU(P)" {_A_ 3 _U_ 222 _N_ _N_ _N_ _N_} _N_ _N_ #-}

