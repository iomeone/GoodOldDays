{-# GHC_PRAGMA INTERFACE VERSION 6 #-}
interface Socket where
import PreludeIOError(IOError13)
import PreludeMonadicIO(Either)
import PreludePrimIO(_MVar)
import PreludeStdIO(_Handle)
import SocketPrim(Socket)
type Hostname = [Char]
data PortID   = Service [Char] | PortNumber Int | UnixSocket [Char]
data Socket 
accept :: Socket -> _State _RealWorld -> (Either IOError13 (_MVar _Handle, [Char]), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 21 _N_ _S_ "SU(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
connectTo :: [Char] -> PortID -> _State _RealWorld -> (Either IOError13 (_MVar _Handle), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 3 _U_ 211 _N_ _S_ "LSU(P)" {_A_ 3 _U_ 212 _N_ _N_ _N_ _N_} _N_ _N_ #-}
listenOn :: PortID -> _State _RealWorld -> (Either IOError13 Socket, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "SU(P)" {_A_ 2 _U_ 12 _N_ _N_ _N_ _N_} _N_ _N_ #-}
recvFrom :: [Char] -> PortID -> _State _RealWorld -> (Either IOError13 [Char], _State _RealWorld)
	{-# GHC_PRAGMA _A_ 3 _U_ 211 _N_ _S_ "LSU(P)" {_A_ 3 _U_ 212 _N_ _N_ _N_ _N_} _N_ _N_ #-}
sendTo :: [Char] -> PortID -> [Char] -> _State _RealWorld -> (Either IOError13 (), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 4 _U_ 2121 _N_ _S_ "LSLU(P)" {_A_ 4 _U_ 2122 _N_ _N_ _N_ _N_} _N_ _N_ #-}
socketPort :: Socket -> _State _RealWorld -> (Either IOError13 PortID, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "SU(P)" {_A_ 2 _U_ 12 _N_ _N_ _N_ _N_} _N_ _N_ #-}

