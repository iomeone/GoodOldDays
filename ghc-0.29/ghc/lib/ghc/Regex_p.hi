{-# GHC_PRAGMA INTERFACE VERSION 6 #-}
interface Regex where
import PreludeArray(Array)
import PreludePS(_PackedString)
import PreludeStdIO(Maybe)
data PatBuffer   = PatBuffer# (MutableByteArray# _RealWorld)
data REmatch   = REmatch (Array Int (Int, Int)) (Int, Int) (Int, Int) (Int, Int) (Int, Int)
re_compile_pattern :: _PackedString -> Bool -> Bool -> _State _RealWorld -> (PatBuffer, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 4 _U_ 2111 _N_ _S_ "SEEU(P)" {_A_ 4 _U_ 2112 _N_ _N_ _N_ _N_} _N_ _N_ #-}
re_match :: PatBuffer -> _PackedString -> Int -> Bool -> _State _RealWorld -> (Maybe REmatch, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 5 _U_ 12111 _N_ _S_ "U(P)SU(P)EU(P)" {_A_ 5 _U_ 22212 _N_ _N_ _N_ _N_} _N_ _N_ #-}
re_match2 :: PatBuffer -> _PackedString -> _PackedString -> Int -> Int -> Bool -> _State _RealWorld -> (Maybe REmatch, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 7 _U_ 1222211 _N_ _S_ "U(P)SSU(P)U(P)EU(P)" _N_ _N_ #-}
re_search :: PatBuffer -> _PackedString -> Int -> Int -> Bool -> _State _RealWorld -> (Maybe REmatch, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 6 _U_ 122211 _N_ _S_ "U(P)SU(P)U(P)EU(P)" _N_ _N_ #-}
re_search2 :: PatBuffer -> _PackedString -> _PackedString -> Int -> Int -> Int -> Bool -> _State _RealWorld -> (Maybe REmatch, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 8 _U_ 12222111 _N_ _S_ "U(P)SSU(P)U(P)U(P)EU(P)" _N_ _N_ #-}
instance _CCallable PatBuffer
	{-# GHC_PRAGMA _M_ Regex {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 1 _!_ _TUP_0 [] [] _N_ #-}
instance _CReturnable PatBuffer
	{-# GHC_PRAGMA _M_ Regex {-dfun-} _A_ 0 _N_ _N_ _N_ _F_ _IF_ARGS_ 0 0 X 1 _!_ _TUP_0 [] [] _N_ #-}

