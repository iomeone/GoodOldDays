{-# GHC_PRAGMA INTERFACE VERSION 6 #-}
interface PreludeStdIO where
import PreludeBuiltin(Char(..), Int(..), Integer(..), List(..), Tuple0, Tuple2, _Addr(..), _RealWorld(..), _State(..))
import PreludeCore(Bool(..), Eq(..), Ord(..), Text(..))
import PreludeGlaST(MutableVar(..), _MutableArray)
import PreludeIOError(IOError13)
import PreludeMonadicIO(Either)
data BufferMode   = NoBuffering | LineBuffering | BlockBuffering (Maybe Int)
type FilePath = [Char]
type Handle = _MutableArray _RealWorld Int _Handle
type HandlePosn = (_MutableArray _RealWorld Int _Handle, Int)
data IOMode   = ReadMode | WriteMode | AppendMode | ReadWriteMode
data Maybe a   = Nothing | Just a
type MutableVar a b = _MutableArray a Int b
data SeekMode   = AbsoluteSeek | RelativeSeek | SeekFromEnd
data _Handle   = _ErrorHandle IOError13 | _ClosedHandle | _SemiClosedHandle _Addr (_Addr, Int) | _ReadHandle _Addr (Maybe BufferMode) Bool | _WriteHandle _Addr (Maybe BufferMode) Bool | _AppendHandle _Addr (Maybe BufferMode) Bool | _ReadWriteHandle _Addr (Maybe BufferMode) Bool
data _MutableArray a b c 	{-# GHC_PRAGMA _MutableArray (b, b) (MutableArray# a c) #-}
_bufferMode :: _Handle -> Maybe BufferMode
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "S" _N_ _N_ #-}
_filePtr :: _Handle -> _Addr
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "S" _N_ _N_ #-}
_getBufferMode :: _Handle -> _State _RealWorld -> (_Handle, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 21 _N_ _S_ "SU(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
_markHandle :: _Handle -> _Handle
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "S" _N_ _N_ #-}
_newHandle :: _Handle -> _State _RealWorld -> (Either IOError13 (_MutableArray _RealWorld Int _Handle), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 21 _N_ _S_ "LS" _F_ _ALWAYS_ \ (u0 :: _Handle) (u1 :: _State _RealWorld) -> case u1 of { _ALG_ S# (u2 :: State# _RealWorld) -> case _APP_  _TYAPP_  _TYAPP_  _WRKR_ _ORIG_ PreludeGlaST newVar { _RealWorld } { _Handle } [ u0, u2 ] of { _ALG_ _TUP_2 (u3 :: _MutableArray _RealWorld Int _Handle) (u4 :: _State _RealWorld) -> let {(u5 :: Either IOError13 (_MutableArray _RealWorld Int _Handle)) = _!_ Right [IOError13, (_MutableArray _RealWorld Int _Handle)] [u3]} in case u4 of { _ALG_ S# (u6 :: State# _RealWorld) -> _!_ _TUP_2 [(Either IOError13 (_MutableArray _RealWorld Int _Handle)), (_State _RealWorld)] [u5, u4]; _NO_DEFLT_ }; _NO_DEFLT_ }; _NO_DEFLT_ } _N_ #-}
_readHandle :: _MutableArray _RealWorld Int _Handle -> _State _RealWorld -> (Either IOError13 _Handle, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "SS" _F_ _ALWAYS_ \ (u0 :: _MutableArray _RealWorld Int _Handle) (u1 :: _State _RealWorld) -> case u0 of { _ALG_ _MutableArray (u2 :: (Int, Int)) (u3 :: MutableArray# _RealWorld _Handle) -> case u1 of { _ALG_ S# (u4 :: State# _RealWorld) -> case _APP_  _TYAPP_  _TYAPP_  _WRKR_ _ORIG_ PreludeGlaST readVar { _RealWorld } { _Handle } [ u3, u4 ] of { _ALG_ _TUP_2 (u5 :: _Handle) (u6 :: _State _RealWorld) -> let {(u7 :: Either IOError13 _Handle) = _!_ Right [IOError13, _Handle] [u5]} in case u6 of { _ALG_ S# (u8 :: State# _RealWorld) -> _!_ _TUP_2 [(Either IOError13 _Handle), (_State _RealWorld)] [u7, u6]; _NO_DEFLT_ }; _NO_DEFLT_ }; _NO_DEFLT_ }; _NO_DEFLT_ } _N_ #-}
_writeHandle :: _MutableArray _RealWorld Int _Handle -> _Handle -> _State _RealWorld -> (Either IOError13 (), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 3 _U_ 121 _N_ _S_ "SLS" _F_ _ALWAYS_ \ (u0 :: _MutableArray _RealWorld Int _Handle) (u1 :: _Handle) (u2 :: _State _RealWorld) -> let {(u3 :: ()) = _!_ _TUP_0 [] []} in case u0 of { _ALG_ _MutableArray (u4 :: (Int, Int)) (u5 :: MutableArray# _RealWorld _Handle) -> case u2 of { _ALG_ S# (u6 :: State# _RealWorld) -> case _APP_  _TYAPP_  _TYAPP_  _WRKR_ _ORIG_ PreludeGlaST writeVar { _Handle } { _RealWorld } [ u5, u1, u6 ] of { _ALG_ _TUP_2 (u7 :: ()) (u8 :: _State _RealWorld) -> let {(u9 :: Either IOError13 ()) = _!_ Right [IOError13, ()] [u3]} in case u8 of { _ALG_ S# (ua :: State# _RealWorld) -> _!_ _TUP_2 [(Either IOError13 ()), (_State _RealWorld)] [u9, u8]; _NO_DEFLT_ }; _NO_DEFLT_ }; _NO_DEFLT_ }; _NO_DEFLT_ } _N_ #-}
hClose :: _MutableArray _RealWorld Int _Handle -> _State _RealWorld -> (Either IOError13 (), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(AP)U(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
hFileSize :: _MutableArray _RealWorld Int _Handle -> _State _RealWorld -> (Either IOError13 Integer, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(AP)U(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
hFlush :: _MutableArray _RealWorld Int _Handle -> _State _RealWorld -> (Either IOError13 (), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(AP)U(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
hGetBuffering :: _MutableArray _RealWorld Int _Handle -> _State _RealWorld -> (Either IOError13 BufferMode, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(AP)U(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
hGetPosn :: _MutableArray _RealWorld Int _Handle -> _State _RealWorld -> (Either IOError13 (_MutableArray _RealWorld Int _Handle, Int), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(LP)U(P)" {_A_ 3 _U_ 222 _N_ _N_ _N_ _N_} _N_ _N_ #-}
hIsBlockBuffered :: _MutableArray _RealWorld Int _Handle -> _State _RealWorld -> (Either IOError13 (Bool, Maybe Int), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(AP)U(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
hIsClosed :: _MutableArray _RealWorld Int _Handle -> _State _RealWorld -> (Either IOError13 Bool, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(AP)U(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
hIsEOF :: _MutableArray _RealWorld Int _Handle -> _State _RealWorld -> (Either IOError13 Bool, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(AP)U(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
hIsLineBuffered :: _MutableArray _RealWorld Int _Handle -> _State _RealWorld -> (Either IOError13 Bool, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(AP)U(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
hIsNotBuffered :: _MutableArray _RealWorld Int _Handle -> _State _RealWorld -> (Either IOError13 Bool, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(AP)U(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
hIsOpen :: _MutableArray _RealWorld Int _Handle -> _State _RealWorld -> (Either IOError13 Bool, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(AP)U(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
hIsReadable :: _MutableArray _RealWorld Int _Handle -> _State _RealWorld -> (Either IOError13 Bool, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(AP)U(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
hIsSeekable :: _MutableArray _RealWorld Int _Handle -> _State _RealWorld -> (Either IOError13 Bool, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(AP)U(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
hIsWritable :: _MutableArray _RealWorld Int _Handle -> _State _RealWorld -> (Either IOError13 Bool, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(AP)U(P)" {_A_ 2 _U_ 22 _N_ _N_ _N_ _N_} _N_ _N_ #-}
hSeek :: _MutableArray _RealWorld Int _Handle -> SeekMode -> Integer -> _State _RealWorld -> (Either IOError13 (), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 4 _U_ 1111 _N_ _S_ "U(AP)LU(PPP)U(P)" {_A_ 4 _U_ 2112 _N_ _N_ _N_ _N_} _N_ _N_ #-}
hSetBuffering :: _MutableArray _RealWorld Int _Handle -> BufferMode -> _State _RealWorld -> (Either IOError13 (), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 3 _U_ 121 _N_ _S_ "LSU(P)" {_A_ 3 _U_ 122 _N_ _N_ _N_ _N_} _N_ _N_ #-}
hSetPosn :: (_MutableArray _RealWorld Int _Handle, Int) -> _State _RealWorld -> (Either IOError13 (), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 2 _U_ 11 _N_ _S_ "U(U(AP)L)U(P)" {_A_ 3 _U_ 212 _N_ _N_ _N_ _N_} _N_ _N_ #-}
isEOF :: _State _RealWorld -> (Either IOError13 Bool, _State _RealWorld)
	{-# GHC_PRAGMA _A_ 1 _U_ 1 _N_ _S_ "U(P)" {_A_ 1 _U_ 2 _N_ _N_ _F_ _IF_ARGS_ 0 1 X 4 \ (u0 :: State# _RealWorld) -> case _ORIG_ PreludeStdIO stdin13 of { _ALG_ _MutableArray (u1 :: (Int, Int)) (u2 :: MutableArray# _RealWorld _Handle) -> _APP_  _WRKR_ _ORIG_ PreludeStdIO hIsEOF [ u2, u0 ]; _NO_DEFLT_ } _N_} _F_ _IF_ARGS_ 0 1 X 3 \ (u0 :: _State _RealWorld) -> _APP_  _ORIG_ PreludeStdIO hIsEOF [ _ORIG_ PreludeStdIO stdin13, u0 ] _N_ #-}
openFile :: [Char] -> IOMode -> _State _RealWorld -> (Either IOError13 (_MutableArray _RealWorld Int _Handle), _State _RealWorld)
	{-# GHC_PRAGMA _A_ 3 _U_ 221 _N_ _S_ "LLU(P)" {_A_ 3 _U_ 222 _N_ _N_ _N_ _N_} _N_ _N_ #-}
stderr13 :: _MutableArray _RealWorld Int _Handle
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
stdin13 :: _MutableArray _RealWorld Int _Handle
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
stdout13 :: _MutableArray _RealWorld Int _Handle
	{-# GHC_PRAGMA _A_ 0 _N_ _N_ _N_ _N_ _N_ #-}
instance Eq a => Eq (Maybe a)
	{-# GHC_PRAGMA _M_ PreludeStdIO {-dfun-} _A_ 1 _U_ 1 _N_ _N_ _N_ _N_ #-}
instance Ord a => Ord (Maybe a)
	{-# GHC_PRAGMA _M_ PreludeStdIO {-dfun-} _A_ 2 _U_ 22 _N_ _N_ _N_ _N_ #-}
instance Text a => Text (Maybe a)
	{-# GHC_PRAGMA _M_ PreludeStdIO {-dfun-} _A_ 1 _U_ 2 _N_ _N_ _N_ _N_ #-}

