{-# GHC_PRAGMA INTERFACE VERSION 6 #-}
interface PreludeIO where
import PreludeBuiltin(Bin, Char(..), Int(..), List(..))
import PreludeCore(Bool(..))
type BinCont = Bin -> [Response] -> [Request]
type Dialogue = [Response] -> [Request]
type FailCont = IOError -> [Response] -> [Request]
data IOError   = WriteError [Char] | ReadError [Char] | SearchError [Char] | FormatError [Char] | OtherError [Char] | EOD
data Request   = ReadFile [Char] | WriteFile [Char] [Char] | AppendFile [Char] [Char] | ReadBinFile [Char] | WriteBinFile [Char] Bin | AppendBinFile [Char] Bin | DeleteFile [Char] | StatusFile [Char] | ReadChan [Char] | AppendChan [Char] [Char] | ReadBinChan [Char] | AppendBinChan [Char] Bin | StatusChan [Char] | Echo Bool | GetArgs | GetProgName | GetEnv [Char] | SetEnv [Char] [Char] | SigAction Int SigAct
data Response   = Success | Str [Char] | StrList [[Char]] | Bn Bin | Failure IOError
data SigAct   = SAIgnore | SADefault | SACatch ([Response] -> [Request])
type StrCont = [Char] -> [Response] -> [Request]
type StrListCont = [[Char]] -> [Response] -> [Request]
type SuccCont = [Response] -> [Request]

