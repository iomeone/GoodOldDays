if ( $ENV{'TMPDIR'} ) { # where to make tmp file names
    $tmp = $ENV{'TMPDIR'} . "/$$.eht";
} else {
    $tmp ="$(TMPDIR)/$$.eht";
    $ENV{'TMPDIR'} = '$(TMPDIR)'; # set the env var as well
}

#------------------------------------------------------------------------
# If you are adjusting paths by hand for a binary GHC distribution,
# de-commenting the line to set GLASGOW_HASKELL_ROOT should do.
# Or you can leave it as is, and set the environment variable externally.
#------------------------------------------------------------------------
# $ENV{'GLASGOW_HASKELL_ROOT'} = '/some/absolute/path/name';

if (! $ENV{'GLASGOW_HASKELL_ROOT'}) { # good -- death to environment variables
    $TopPwd	    = '$(TOP_PWD)';
    $InstLibDirGhc  = '$(INSTLIBDIR_GHC)';
    $InstDataDirGhc = '$(INSTDATADIR_GHC)';
} else {
    $TopPwd = $ENV{'GLASGOW_HASKELL_ROOT'};

    if ( '$(INSTLIBDIR_GHC)' =~ /\/local\/fp(\/.*)/ ) {
	$InstLibDirGhc	= $ENV{'GLASGOW_HASKELL_ROOT'} . $1;
    } else {
	print STDERR "GLASGOW_HASKELL_ROOT environment variable is set;\nBut can't untangle $(INSTLIBDIR_GHC).\n(Installation error)\n";
	exit(1);
    }

    if ( '$(INSTDATADIR_GHC)' =~ /\/local\/fp(\/.*)/ ) {
	$InstDataDirGhc	= $ENV{'GLASGOW_HASKELL_ROOT'} . $1;
    } else {
	print STDERR "GLASGOW_HASKELL_ROOT environment variable is set;\nBut can't untangle $(INSTDATADIR_GHC).\n(Installation error)\n";
	exit(1);
    }
}

$Unlit = ( $(INSTALLING) ) ? "$InstLibDirGhc/unlit"
			   : "$TopPwd/$(CURRENT_DIR)/$(GHC_UNLIT)";
$HsCpp = # but this is re-set to "cat" (after options) if -cpp not seen
	 ( $(INSTALLING) ) ? "$InstLibDirGhc/hscpp"
			   : "$TopPwd/$(CURRENT_DIR)/$(GHC_HSCPP)";
$HsP   = ( $(INSTALLING) ) ? "$InstLibDirGhc/hsp"
			   : "$TopPwd/$(CURRENT_DIR)/$(GHC_HSP)";
$HsTagsHelp
       = ( $(INSTALLING) ) ? "$InstLibDirGhc/hstags-help"
			   : "$TopPwd/$(CURRENT_DIR)/$(HSTAGSSRC)/hstags-help";

$Verbose = 0;
$Append = '>';
$DoCpp = 0;
$Cpp_opts = '';
$HsP_opts = '';
@Files = ();

while ($ARGV[0] =~ /^-./) {
    $_ = shift(@ARGV);
    /^--/		&& last;
    /^-v/		&& ($Verbose  =  1, next);
    /^-a$/		&& ($Append   = '>>', next);
    /^-fglasgow-ext/	&& ($HsP_opts .= ' -N', next);
    /^-optP(.*)/	&& ($Cpp_opts .= " $1", next);
    /^-[UDI]/		&& ($Cpp_opts .= " $_", next);
    /^-cpp/		&& ($DoCpp = 1, next);
    /^-/		&& next; # ignore the rest
    push(@Files, $_);
}

$ghc_version_info = $(PROJECTVERSION) * 100;
$DoHsCpp = ( ! $DoCpp ) ? 'cat'
			: "$HsCpp -D__HASKELL1__=2 -D__GLASGOW_HASKELL__=$ghc_version_info $Cpp_opts";

# to find Prelude.hi
$HsP_opts .= ( ( $(INSTALLING) ) ? " -J$InstDataDirGhc/imports"
				 : " -J$TopPwd/$(CURRENT_DIR)/$(GHC_LIBSRC)/prelude" );

open(STDOUT, "$Append TAGS") || die "can't create TAGS";

foreach $f ( @ARGV ) {
    # if file is in a dir && we are CPPing, then we add its dir to the -I list.
    if ( $DoCpp && $f =~ /(.+)\/[^\/]+$/ ) {
	$Idir = "-I$1";
    } else {
	$Idir = '';
    }

    if ( $f =~ /\.lhs$/ ) {
	$ToDo = "$Unlit $f - | $DoHsCpp $Idir | $HsP -E $HsP_opts | $HsTagsHelp $f > $tmp";
    } else {
	$ToDo = "$DoHsCpp $Idir < $f | $HsP -E  $HsP_opts | $HsTagsHelp $f > $tmp";
    }
    print STDERR "$ToDo\n" if $Verbose;
    system($ToDo);
    $return_val = $?;
    die "Fatal error $return_val\n" if $return_val != 0;

    $stuff = `ls -l $tmp`;
    @size = split(/[ \t]+/,$stuff);

    print STDOUT "\f\n$f,",$size[3],"\n";
    print STDOUT `cat $tmp`;
}

unlink $tmp;
